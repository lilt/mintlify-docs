openapi: 3.0.0

info:
  title: Lilt Client HTTP API
  version: 2.2.0
  description: ""

paths:
  # ---------------------------------------------------------------------------
  #
  #  Log in.
  #
  # ---------------------------------------------------------------------------

  /login/user:
    post:
      summary: Exchange authentication credentials for a session cookie
      requestBody:
        required: true
        description: >-
          Form data including a user's email address and password for
          authentication.
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      security: [] # No authentication.
      responses:
        "200":
          description: >
            Successfully authenticated. The session ID is returned in a cookie
            named `session`. This cookie must be included in subsequent
            requests.
          content:
            application/json:
              schema:
                description: A JSON object.
                type: object
            text/html; charset=utf-8:
              schema:
                description: A string containing an HTML response or error string.
                type: string
          headers:
            Set-Cookie:
              schema:
                type: string
                example: session=JMwbrSvH6yIHhIvVfJM32Q.pyEzbj-ai8JJVRkqpTytlZYamcnJDvU86FEYW_JSrk5Se7rmIoTbsxkDOKhW-w4U.1564027651241.8640000000.HQhunfZJaOHYGV7trViLxZVxgF1u-XnEQqgObi-vO8M;

  # ---------------------------------------------------------------------------
  #
  #  Log out.
  #
  # ---------------------------------------------------------------------------

  /logout:
    get:
      summary: Terminate an authenticated session
      responses:
        "200":
          description: >-
            Successfully terminated session.

  # ---------------------------------------------------------------------------
  #
  #  Account.
  #
  # ---------------------------------------------------------------------------

  "/account":
    get:
      tags:
        - Account
      summary: Retrieve the session user
      description: >-
        Retrieve the session user's access context including lists of the
        organizations and teams in which they are a member.
      operationId: getAccount
      responses:
        "200":
          description: The account context for the session user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountResponse"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # ---------------------------------------------------------------------------
  #
  #  Organizations.
  #
  # ---------------------------------------------------------------------------

  /organizations:
    get:
      tags:
        - Organizations
      summary: List all organizations
      description: >-
        List all organizations.


        Route guarded by `teams.write` permission.
      operationId: getOrganizations
      x-rbac-permissions: ["teams.write"]
      responses:
        "200":
          description: An array of organizations.
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizations:
                    type: array
                    items:
                      $ref: "#/components/schemas/Organization"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/organizations/{organizationId}/roles":
    get:
      tags:
        - Organizations
      summary: List all roles in an organization
      description: >-
        Retrieve a list of the roles in a team.


        Route guarded by `teams.write` permission.
      operationId: getOrganizationRoles
      x-rbac-permissions: ["teams.write"]
      parameters:
        - in: path
          name: organizationId
          description: An organization's unique identifier.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A list of roles.
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      $ref: "#/components/schemas/Role"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      tags:
        - Organizations
      summary: Create a role in the organization
      description: >-
        Create a role in the organization


        Route guarded by `teams.write` permission.
      operationId: createOrganizationRoles
      x-rbac-permissions: ["teams.write"]
      parameters:
        - in: path
          name: organizationId
          description: An organization's unique identifier.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: >-
          A role.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeRoleRequest"
      responses:
        "201":
          description: The created role.
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    $ref: "#/components/schemas/Role"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/organizations/{organizationId}/role/{roleId}":
    delete:
      tags:
        - Organizations
      summary: Delete a role from an organization
      description: >-
        Delete a role from an organization.


        Route guarded by `teams.write` permission.
      operationId: deleteOrganizationRole
      x-rbac-permissions: ["teams.write"]
      parameters:
        - in: path
          name: organizationId
          description: An organization's unique identifier.
          required: true
          schema:
            type: integer
        - in: path
          name: roleId
          description: A role's unique identifier.
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: The role was deleted.
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - Organizations
      summary: Update a role in an organization
      description: >-
        Delete a role from an organization.
      operationId: updateOrganizationRole
      parameters:
        - in: path
          name: organizationId
          description: An organization's unique identifier.
          required: true
          schema:
            type: integer
        - in: path
          name: roleId
          description: A role's unique identifier.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: >-
          Full set of properties of the updated role.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeRoleRequest"
      responses:
        "204":
          description: The role was updated.
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/organizations/{organizationId}/members":
    get:
      tags:
        - Organizations
      summary: List all users with one or more roles in the organization
      description: >-
        Retrieve a list of the members in an organization.


        List all users granted one or more roles in the organization


        Route guarded by `teams.write` permission.
      operationId: getOrganizationMembers
      x-rbac-permissions: ["teams.write"]
      parameters:
        - in: path
          name: organizationId
          description: An organization's unique identifer.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A list of `User` objects with its corresponding roles objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserRolesMapping"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      tags:
        - Organizations
      summary: Add a user to a specific organization
      description: >-
        Add a user to a specific organization.


        Route guarded by `teams.write` permission.
      operationId: addOrganizationMember
      x-rbac-permissions: ["teams.write"]
      parameters:
        - in: path
          name: organizationId
          description: An organization's unique identifer.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: >-
          An email address associated with the user who will be invited.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddOrganizationMemberRequest"
      responses:
        "201":
          description: The user just added to the organization.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddOrganizationMemberResponse"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/organizations/{organizationId}/members/{userId}":
    delete:
      tags:
        - Organizations
      summary: Remove a user from an organization
      description: >-
        Remove a user from the specified organization.


        This revokes all roles granted to the user for the specified
        organization.


        Route guarded by `teams.write` permission.
      operationId: deleteOrganizationMember
      x-rbac-permissions: ["teams.write"]
      parameters:
        - in: path
          name: organizationId
          description: An organization's unique identifer.
          required: true
          schema:
            type: integer
        - in: path
          name: userId
          description: An user's unique identifer.
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: The user was successfully removed form the organization.
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/organizations/{organizationId}/members/{userId}/roles":
    post:
      tags:
        - Organizations
      summary: Grant roles to an organization member
      description: >-
        Grant one or more roles to an organization member.


        Route guarded by `teams.write` permission.
      operationId: addOrganizationMemberRoles
      x-rbac-permissions: ["teams.write"]
      parameters:
        - in: path
          name: organizationId
          description: An organization's unique identifer.
          required: true
          schema:
            type: integer
        - in: path
          name: userId
          description: An user's unique identifer.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: >-
          A list of roles to grant an organization member.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GrantOrganizationMemberRoleRequest"
      responses:
        "201":
          description: The role just added to the organization.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddOrganizationMemberResponse"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      tags:
        - Organizations
      summary: Update an organization member's roles
      description: >-
        Replace the list of roles granted to an organization member with the
        specified list.


        The request will fail if the user is not a member of the organization.


        If any one of the specified roles does not belong to the specified
        organization.


        Route guarded by `teams.write` permission.
      operationId: replaceOrganizationMemberRoles
      x-rbac-permissions: ["teams.write"]
      parameters:
        - in: path
          name: organizationId
          description: An organization's unique identifer.
          required: true
          schema:
            type: integer
        - in: path
          name: userId
          description: An user's unique identifer.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: >-
          A list of roles to grant an organization member.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GrantOrganizationMemberRoleRequest"
      responses:
        "200":
          description: The updated list of roles.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplaceOrganizationMemberRolesResponse"
        "400":
          description: >-
            Either the user is not a member of the organization or the role does
            not belong to the specified organization.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/organizations/{organizationId}/members/{userId}/roles/{roleId}":
    delete:
      tags:
        - Organizations
      summary: Revoke a specific role from organization member
      description: >-
        Revokes an organization member's role.


        Route guarded by `teams.write` permission.
      operationId: deleteOrganizationMemberRole
      x-rbac-permissions: ["teams.write"]
      parameters:
        - in: path
          name: organizationId
          description: An organization's unique identifer.
          required: true
          schema:
            type: integer
        - in: path
          name: userId
          description: An user's unique identifer.
          required: true
          schema:
            type: integer
        - in: path
          name: roleId
          description: A role's unique identifer.
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: >-
            The role was was successfully removed for the organization member.
        "403":
          description: >-
            The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # ---------------------------------------------------------------------------
  #
  #  Teams.
  #
  # ---------------------------------------------------------------------------

  "/organizations/{organizationId}/teams":
    get:
      tags:
        - Organizations
      summary: List all teams in a specific organization
      description: >-
        Retrieve a list of the teams in an organization.


        Route guarded by `teams.write` permission.
      operationId: getOrganizationTeams
      x-rbac-permissions: ["teams.write"]
      parameters:
        - in: path
          name: organizationId
          description: Flag indicating whether full segment information should be returned.
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: A Organization object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  teams:
                    type: array
                    items:
                      $ref: "#/components/schemas/Team"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/organizations/{organizationId}/teams/{teamId}":
    get:
      tags:
        - Teams
      summary: Retrieve a specific team
      description: >-
        Retrieve a specific team by unique identifier.


        Route guarded by `teams.write` permission.
      operationId: getTeam
      x-rbac-permissions: ["teams.write"]
      parameters:
        - in: path
          name: organizationId
          description: A organization's unique identifier.
          required: true
          schema:
            type: integer
        - in: path
          name: teamId
          description: A team's unique identifier.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: The requested team.
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    $ref: "#/components/schemas/Team"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/organizations/{organizationId}/teams/{teamId}/members":
    get:
      tags:
        - Teams
      summary: List all users on a specific team
      description: >-
        Retrieve a list of the members on a specific team.


        A member is a user with one or more roles on the team.


        Route guarded by `teams.write` permission.
      operationId: getTeamMembers
      x-rbac-permissions: ["teams.write"]
      parameters:
        - in: path
          name: organizationId
          description: An organization's unique identifer.
          required: true
          schema:
            type: integer
        - in: path
          name: teamId
          description: A team's unique identifer.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A list of `User` objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      tags:
        - Teams
      summary: Add a user to a specific team
      description: >-
        Add a user to a specific team.


        Route guarded by `teams.write` permission.
      operationId: addTeamMember
      x-rbac-permissions: ["teams.write"]
      parameters:
        - in: path
          name: organizationId
          description: An organization's unique identifer.
          required: true
          schema:
            type: integer
        - in: path
          name: teamId
          description: A team's unique identifer.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: >-
          A unique identifier for the user to add to the specified team.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTeamMemberRequest"
      responses:
        "201":
          description: The user just added to the team.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddTeamMemberResponse"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        "405":
          description: >-
            The user is not a member of the team's parent organization. To add
            a user to a team, the user must be a member of the team's parent
            organization.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MethodNotAllowedError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/organizations/{organizationId}/teams/{teamId}/members/{userId}":
    delete:
      tags:
        - Teams
      summary: Remove a user from a team
      description: >-
        Remove a user from a team.


        Route guarded by `teams.write` permission.
      operationId: removeTeamMember
      x-rbac-permissions: ["teams.write"]
      parameters:
        - in: path
          name: organizationId
          description: An organization's unique identifer.
          required: true
          schema:
            type: integer
        - in: path
          name: teamId
          description: An team's unique identifer.
          required: true
          schema:
            type: integer
        - in: path
          name: userId
          description: An user's unique identifer.
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: The user was removed from the team.
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # ---------------------------------------------------------------------------
  #
  #  Users.
  #
  # ---------------------------------------------------------------------------

  "/users/{userId}":
    get:
      tags:
        - Users
      summary: Retrieve a specific user
      description: >-
        Retrieve a specific `User` object by unique identifier.
      operationId: getUser
      parameters:
        - description: A user's unique identifier.
          in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: The requested user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/users/{userId}/organizations":
    get:
      tags:
        - Users
      summary: List all organizations in which a specific user has a role
      description: >-
        Retrieve a list of the organizations in which a specific user has  been
        granted a role.
      operationId: getUserOrganizations
      parameters:
        - in: path
          name: userId
          description: A user's unique identifier.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A list of `Organization` objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizations:
                    $ref: "#/components/schemas/Organization"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/users/{userId}/organizations/{organizationId}/roles":
    get:
      tags:
        - Users
      summary: List all roles granted to a specific user on a specific team
      description: >-
        Retrieve a list of the organizations in which a specific user has  been
        granted a role.
      operationId: getUserOrganizationRoles
      parameters:
        - in: path
          name: userId
          description: A user's unique identifier.
          required: true
          schema:
            type: integer
        - in: path
          name: organizationId
          description: A organization's unique identifier.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A list of `Organization` objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      $ref: "#/components/schemas/Role"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/users/{userId}/organizations/{organizationId}/teams":
    get:
      tags:
        - Users
      summary: List all teams in which a specific user has a role
      description: >-
        Retrieve a list of the teams in an organization.
      operationId: getUserTeams
      parameters:
        - in: path
          name: userId
          description: A user's unique identifier.
          required: true
          schema:
            type: integer
        - in: path
          name: organizationId
          description: An organization's unique identifier.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: An list of `Team` objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  teams:
                    type: array
                    items:
                      $ref: "#/components/schemas/Team"
        "403":
          description: The user is not authorized to access the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionError"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # ---------------------------------------------------------------------------
  #
  #  Projects
  #
  # ---------------------------------------------------------------------------

  "/projects/{projectId}/documents/${documentId}/preview":
    get:
      tags:
        - Documents
      summary: Retrieve a preview for a document
      description: >-
        Retrieve a json representation of target document preview from translated segments
      operationId: getDocumentPreview
      parameters:
        - name: projectId
          description: Some existing project identifier
          in: path
          required: true
          schema:
            type: integer
        - name: documentId
          description: Some existing document identifier
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Latest version of preview of the specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  preview:
                    type: array
                    items:
                      type: object

        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

security:
  - CookieAuth: []

servers:
  - url: http://localhost:8011/app/api
    description: Local
  - url: https://dev.lilt.com/app/api
    description: Development
  - url: https://beta.lilt.com/app/api
    description: Beta
  - url: https://lilt.com/app/api
    description: Production

components:
  requestBodies:
    entityRequestBody:
      description: An entity's unique identifer.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                description: An entity's unique identifier.
                type: integer
                example: 46530
            required:
              - id

    createOrganizationRoleBody:
      description: The resource to update.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                description: A unique identifier.
                type: integer
                example: 42
              name:
                description: The Role name.
                type: string
                example: Translator
            required:
              - id
              - name

    updateOrganizationRoleBody:
      description: The role to update.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                description: A name for the team.
                type: string
                example: Translator
              description:
                description: A description for the team.
                type: string
                example:
                  Assign this role to users who will be assigned to documents
                  for translation.

    updateTeamBody:
      description: The resource to update.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                description: A name for the team.
                type: string
                example: Translation Team
              description:
                description: A description for the team.
                type: string
                example: A team of translators.

  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    ApiKeyAuth:
      type: apiKey
      in: query
      name: key
    CookieAuth:
      type: apiKey
      in: cookie
      name: session

  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          description: A user's email address.
          type: string
          example: developer@lilt.com
        password:
          description: The user's password.
          type: string
          example: mypassword

    AddOrganizationMemberRequest:
      type: object
      properties:
        user:
          description: A user
          type: object
          properties:
            email:
              type: string
              example: translator@lilt.com
        roles:
          description: List of roles to grant user
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 42

    GrantOrganizationMemberRoleRequest:
      type: object
      properties:
        roles:
          description: List of roles to grant user
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 42

    AddTeamMemberRequest:
      type: object
      properties:
        user:
          description: A user
          type: object
          properties:
            id:
              type: string
              example: 144

    ChangeRoleRequest:
      type: object
      properties:
        name:
          description: Name of role.
          type: string
          example: "Translator"
        description:
          description: Description of role.
          type: string
          example: "The role assigned to translators."
        permissions:
          $ref: "#/components/schemas/PermissionsJSON"

    PermissionsJSON:
      type: object
      description: key-value object, where keys are allowed permissions, and values are true/false

    MethodNotAllowedError:
      description: |
        Response in the event of an unexpected error.
      type: object
      properties:
        message:
          description: A human-readable message describing the error.
      example:
        message: Method Not Allowed

    Error:
      description: |
        Response in the event of an unexpected error.
      type: object
      properties:
        message:
          description: A human-readable message describing the error.
      example:
        message: Internal Server Errror

    PermissionError:
      description: >-
        Response in the event of unsufficient permisions to access a specified
        resource.
      type: object
      properties:
        message:
          description: A human-readable message describing the error.
      example:
        message: Forbidden

    Routes:
      properties:
        account:
          type: string
          format: uri
        organizations:
          type: string
          format: uri
        teams:
          type: string
          format: uri
        roles:
          type: string
          format: uri
        users:
          type: string
          format: uri

    Organization:
      description: >-
        An organization provides an context for associating particular
        documents.
      type: object
      properties:
        id:
          description: A unique identifier.
          type: integer
          example: 48
        links:
          description: >-
            Links to related resources.
          type: object
          properties:
            self:
              description: List of a specific user's organizations
              type: string
              example: https://lilt.com/app/api/organizations/48
            roles:
              description: List of a specific organization's roles
              type: string
              example: https://lilt.com/app/api/organizations/48/roles
            members:
              description: List of the users in the organization.
              type: string
              example: https://lilt.com/app/api/organizations/48/members
            teams:
              description: List of a specific user's teams
              type: string
              example: https://lilt.com/app/api/organizations/48/teams
        name:
          description: A name for the organization.
          type: string
          example: Lilt
        description:
          description: A description for the organization.
          type: string
          example: >-
            Lilt's managed services organization.
        createdAt:
          description:
            The time at which the object was created represented in the the ISO
            8601 format.
          type: integer
          example: 2019-08-21T03:20:23.00Z
        updatedAt:
          description:
            The time at which the object was updated represented in the the ISO
            8601 format.
          type: integer
          example: 2019-08-21T03:20:23.00Z

    Team:
      description: >-
        A team is an organizational unit with which entities can be associated.
      type: object
      properties:
        id:
          description: A unique number identifying the team.
          type: integer
          example: 96
        links:
          description: >-
            Links to related resources.
          type: object
          properties:
            self:
              description: Link to this team.
              type: string
              example: https://lilt.com/app/api/organizations/48/teams/96
            organization:
              description: The parent organization.
              type: string
              example: https://lilt.com/app/api/organizations/48
            members:
              description: List of the users on the team.
              type: string
              example: >-
                https://lilt.com/app/api/organizations/48/teams/96/members
        name:
          description: A name for the team.
          type: string
          example: Translation Team
        description:
          description: A description for the team.
          type: string
          example: A team of translators.
        createdAt:
          description:
            The time at which the object was created represented in the the ISO
            8601 format.
          type: integer
          example: 2019-08-21T03:20:23.00Z
        updatedAt:
          description:
            The time at which the object was updated represented in the the ISO
            8601 format.
          type: integer
          example: 2019-08-21T03:20:23.00Z
        OrganizationId:
          description: >-
            A unique number identifying the team's parent organization.
          type: integer
          example: 48

    AccountResponse:
      description: >-
        A user of Lilt.
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        options:
          $ref: "#/components/schemas/UserOptions"
        organizations:
          type: array
          items:
            $ref: "#/components/schemas/Organization"
        teams:
          type: array
          items:
            $ref: "#/components/schemas/Team"

    AddOrganizationMemberResponse:
      description: >-
        A user of Lilt.
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        organizations:
          type: array
          items:
            $ref: "#/components/schemas/Organization"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"

    AddTeamMemberResponse:
      description: >-
        A user of Lilt.
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        organizations:
          type: array
          items:
            $ref: "#/components/schemas/Organization"
        teams:
          type: array
          items:
            $ref: "#/components/schemas/Team"

    ReplaceOrganizationMemberRolesResponse:
      description: >-
        The response after replacing an organization member's set of roles.
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"

    UserRolesMapping:
      description: >-
        A user and the roles assigned to it within an organization. These constitutes the membership of a user within an organization.
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
    User:
      description: >-
        A user of Lilt.
      type: object
      properties:
        id:
          description: A unique identifier.
          type: integer
          example: 1234
        links:
          description: >-
            Links to related resources.
          type: object
          properties:
            self:
              description: This user.
              type: string
              example: https://lilt.com/app/api/users/1234
            organizations:
              description: List of a specific user's organizations
              type: string
              example: https://lilt.com/app/api/users/1234/organizations
        username:
          description: An email address.
          type: string
          example: translator@lilt.com
        email:
          description: An email address.
          type: string
          example: translator@lilt.com
        givenName:
          description: User's given name.
          type: string
          example: ""
        fullName:
          description: User's full name.
          type: string
          example: ""
        imageURL:
          description: User's profile image.
          type: string
          example: "https://cdn.host.com/image.png"
        companyName:
          type: string
        seenTutorial:
          type: string
        tourState:
          type: string
        authentication:
          type: string
        billingTier:
          type: string
        isConfirmed:
          type: boolean
        unconfirmedEmail:
          type: string
        city:
          type: string
        createdAt:
          description:
            The time at which the object was created represented in the the ISO
            8601 format.
          type: integer
          example: 2019-08-21T03:20:23.00Z
        updatedAt:
          description:
            The time at which the object was updated represented in the the ISO
            8601 format.
          type: integer
          example: 2019-08-21T03:20:23.00Z

    UserOptions:
      description: >-
        A user of Lilt.
      type: object
      properties:
        id:
          description: A unique identifier.
          type: integer
          example: 1234
        location:
          description: Resource URI.
          type: string
          example: "https://lilt.com/app/api/users/1234/options/1234"
        keepLexiconOpen:
          description: Controls whether the lexicon will be kept open in the editor.
          type: boolean
          example: true
        caseSensitiveAutocomplete:
          description: Controls whether segment translation suggestions are case sensitive.
          type: boolean
          example: true
        autoPropagation:
          description: Controls whether auto-propagation is enabled in the editor.
          type: boolean
          example: true
        showAllTags:
          description: Show tags in source and target segments.
          type: boolean
          example: true
        showSourceTags:
          description: Show the segment source's tags.
          type: boolean
          example: true
        showTargetTags:
          description: Show the segment target's tags.
          type: boolean
          example: true
        caseSensitiveMatch:
          description: Use case sensitive translation memory (TM) matching.
          type: boolean
          example: true
        segmentsPerPage:
          description: The number of segments to display per page.
          type: boolean
          example: true
        backwardAutoPropagation:
          description: Backward auto-propagation
          type: boolean
          example: true
        replaceLastWord:
          description: Replace last word
          type: boolean
          example: true
        autoScroll:
          description: Auto-scroll
          type: boolean
          example: true
        displayInvisibleCharacters:
          description: Display invisible characters
          type: boolean
          example: true
        tabToInsert:
          description: Tab to insert
          type: boolean
          example: true
        createdAt:
          description:
            The time at which the object was created represented in the the ISO
            8601 format.
          type: integer
          example: 2019-08-21T03:20:23.00Z
        updatedAt:
          description:
            The time at which the object was updated represented in the the ISO
            8601 format.
          type: integer
          example: 2019-08-21T03:20:23.00Z

    Role:
      description: >-
        A role represents a particular set of actions that can be performed in
        an organization or team context by any user to which the role is
        granted.
      type: object
      properties:
        id:
          description: A unique identifier.
          type: integer
          example: 42
        links:
          description: >-
            Links to related resources.
          type: object
          properties:
            self:
              description: Link to this role.
              type: string
              example: https://lilt.com/app/api/organizations/48/roles/42
            organization:
              description: The parent organization.
              type: string
              example: https://lilt.com/app/api/organizations/48
        name:
          description: A name for the role.
          type: string
          example: Translator
        description:
          description: Description of the role.
          type: string
          example: The role assigned to translators.
        permissions:
          description: |-
            A list of permissions.


            A permissions object associates permissions with a team.
          type: array
          items:
            $ref: "#/components/schemas/Permission"
        OrganizationId:
          description: >-
            A unique number identifying the role's parent organization.
          type: integer
          example: 48
        createdAt:
          description:
            The time at which the object was created represented in the the ISO
            8601 format.
          type: integer
          example: 2019-08-21T03:20:23.00Z
        updatedAt:
          description:
            The time at which the object was updated represented in the the ISO
            8601 format.
          type: integer
          example: 2019-08-21T03:20:23.00Z

    Permission:
      description: >-
        A role represents a particular set of actions that can be performed in
        an organization or team context by any user to which the role is
        granted.
      type: object
      properties:
        name:
          description: The permision identifier
          type: string
          example: "teams.write"
        description:
          description: A description for the team.
          type: string
          example: Enables the user to perform write operations for a team.

    Grant:
      description: >-
        A grant associates, or _grants_, a user a specific role in a specific
        organization or team.
      type: object
      properties:
        id:
          description: A unique identifier.
          type: integer
          example: 46530
        isAdministrator:
          description: >-
            If true, all permissions will automatically be granted to the
            associated user.


            By default, no role is stored if this value is true. Instead, it's
            dynamically created. This is false by default.
          type: boolean
          example: false
        createdAt:
          description:
            The time at which the object was created represented in the the ISO
            8601 format.
          type: integer
          example: 2019-08-21T03:20:23.00Z
        updatedAt:
          description:
            The time at which the object was updated represented in the the ISO
            8601 format.
          type: integer
          example: 2019-08-21T03:20:23.00Z
